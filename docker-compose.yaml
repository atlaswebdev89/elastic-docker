version: '3.1'

networks:
    elastic:
        driver: bridge

volumes:
  elastic2-data: 
  elastic1-data:
  elastic3-data:  

services:
    # Для балансировки запросов к logstash
    web-proxy-logstash:
        image: nginx:latest
        container_name: nginx-proxy-logstash
        restart: unless-stopped
        ports:
            - "514:514"
            - "514:514/udp"
        volumes:
            - ./nginx/nginx-logstash/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/nginx-logstash/mod-proxy-syslog.conf:/etc/nginx/logstash-proxy/mod-proxy-syslog.conf:ro
            # Без этого не работает. Возможно в будущем надо будет пересоздать образ. Создать Dockerfile с этими файлами 
            # чтоб не засорять docker-compose
            - ./nginx/nginx-logstash/logstash-connect.log:/var/log/nginx/logstash/logstash-connect.log
            - ./nginx/nginx-logstash/logstash-error.log:/var/log/nginx/logstash/logstash-error.log
        networks:
          - elastic

     # Настройка для балансировки запросов к kinaba
    web-proxy-kibana:
        image: nginx:latest
        container_name: nginx-proxy-kibana
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./nginx/nginx-kibana/kibana.conf:/etc/nginx/templates/default.conf.template
        networks:
            - elastic
    
    # Настройка для Logstash (server 1)
    elastic-logstash-node-1:
        build:
            context: logstash/
            # Имя докерфайла из которого будет собран образ
            dockerfile: Dockerfile
        container_name: logstash-one
        restart: unless-stopped
        networks:
            - elastic
        depends_on:
            - web-proxy-logstash
    
    # Настройка для Logstash (server 2)
    elastic-logstash-node-2:
        build:
            context: logstash/
            # Имя докерфайла из которого будет собран образ
            dockerfile: Dockerfile
        container_name: logstash-two
        restart: unless-stopped
        networks:
            - elastic
        depends_on:
            - web-proxy-logstash

    # Настройка kibana node 1
    elastic-kibana-node-1:
        build:
            context: kibana/
            # Имя докерфайла из которого будет собран образ
            dockerfile: Dockerfile
        container_name: kibana-one
        restart: unless-stopped
        networks:
            - elastic

    # Настройка kibana node 1
    elastic-kibana-node-2:
        build:
            context: kibana/
            # Имя докерфайла из которого будет собран образ
            dockerfile: Dockerfile
        container_name: kibana-two
        restart: unless-stopped
        networks:
            - elastic
    # Настройка Elasticsearch
    elastic-node-1:
        build:
            context: elastic/
            # Имя докерфайла из которого будет собран образ
            dockerfile: Dockerfile
        container_name: elastic-node-1
        restart: unless-stopped
        # Без этого не работает при дериктиве bootstrap.memory_lock=true
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
             # Отключить использование файла подкачки. Для elastic не рекомендоуется использовать swapp
            - bootstrap.memory_lock=true
            # Для одиночного хоста, не в cluster
            # - discovery.type=single-node
            - TZ=Europe/Minsk
            # Ограничение размера кучи
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        # ports:
        #     - "9200:9200"
        #     - "9300:9300"
        volumes:
            - elastic1-data:/usr/share/elasticsearch/data/
            - ./elastic/cert/:/usr/share/elasticsearch/config/cert/
        networks:
            - elastic 
    
    elastic-node-2:
        build:
            context: elastic-slave/
            # Имя докерфайла из которого будет собран образ
            dockerfile: Dockerfile
        container_name: elastic-node-2
        restart: unless-stopped
        # Без этого не работает при дериктиве bootstrap.memory_lock=true
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
             # Отключить использование файла подкачки. Для elastic не рекомендоуется использовать swapp
            - bootstrap.memory_lock=true
            # Для одиночного хоста, не в cluster
            # - discovery.type=single-node
            - TZ=Europe/Minsk
            # Ограничение размера кучи
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        # ports:
        #     - "9200:9200"
        #     - "9300:9300"
        volumes:
            - elastic2-data:/usr/share/elasticsearch/data/
            - ./elastic/cert/:/usr/share/elasticsearch/config/cert/
        networks:
            - elastic 
    
    elastic-node-3:
        build:
            context: elastic-slave-2/
            # Имя докерфайла из которого будет собран образ
            dockerfile: Dockerfile
        container_name: elastic-node-3
        restart: unless-stopped
        # Без этого не работает при дериктиве bootstrap.memory_lock=true
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
             # Отключить использование файла подкачки. Для elastic не рекомендоуется использовать swapp
            - bootstrap.memory_lock=true
            # Для одиночного хоста, не в cluster
            # - discovery.type=single-node
            - TZ=Europe/Minsk
            # Ограничение размера кучи
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        # ports:
        #     - "9200:9200"
        #     - "9300:9300"
        volumes:
            - elastic3-data:/usr/share/elasticsearch/data/
            - ./elastic/cert/:/usr/share/elasticsearch/config/cert/
        networks:
            - elastic 
          